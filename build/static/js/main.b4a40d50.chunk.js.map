{"version":3,"sources":["Command.js","CommandList.js","Icons/PlayBtn.svg","App.js","index.js"],"names":["Command","command","console","log","date","getDate","getMonth","CommandList","commandlist","className","map","element","socket","io","connect","transports","upgrade","App","useState","connected","setConnected","on","removeAllListeners","cmd","commandInputRef","useRef","commands","setCommands","id","autoComplete","placeholder","ref","type","onClick","e","current","value","obj","Date","result","prev","emit","JSON","stringify","document","getElementById","classList","add","onAddCommand","src","PlayBtn","alt","ReactDOM","render","StrictMode"],"mappings":"6LAEe,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAE9B,OADAC,QAAQC,IAAR,UAAuBF,GAEnB,mCAASA,EAAQA,QAAjB,MAA8BA,EAAQG,KAAKC,UAA3C,IAAwDJ,EAAQG,KAAKE,WAAa,KCF3E,SAASC,EAAT,GAAuC,IAAhBC,EAAe,EAAfA,YAClC,OACI,qBAAIC,UAAU,WAAd,UAEQD,EAAYE,KAAI,SAAAC,GAEZ,OACI,6BACI,cAACX,EAAD,CAASC,QAASU,SAMlC,gI,UCjBG,MAA0B,oC,QCOnCC,E,OAASC,EAAGC,QAAQ,4BAA6B,CACrDC,WAAY,CAAC,aACbC,SAAS,IAsEIC,MAnEf,WAEE,MAAkCC,mBAAS,iBAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEAR,EAAOS,GAAG,WAAW,WACnBnB,QAAQC,IAAI,uBACZiB,EAAa,gBAGfR,EAAOS,GAAG,cAAc,WACtBnB,QAAQC,IAAI,gBACZS,EAAOU,qBACPF,EAAa,mBAGfR,EAAOS,GAAG,OAAO,SAAUE,GACzBrB,QAAQC,IAAIoB,MAGd,IAAMC,EAAkBC,mBAExB,EAAgCP,mBAAS,IAAzC,mBAAOQ,EAAP,KAAiBC,EAAjB,KAsBA,OACE,qCACE,sBAAKlB,UAAU,UAAUmB,GAAG,UAA5B,UACE,uBACEC,aAAa,MACbC,YAAY,mBACZF,GAAG,QACHnB,UAAU,iBACVsB,IAAKP,EACLQ,KAAK,SAGP,wBAAQC,QAAS,kBAhCF,SAACC,GACpB,GAAsC,KAAlCV,EAAgBW,QAAQC,MAA5B,CAEA,IAAMC,EAAM,CACVpC,QAASuB,EAAgBW,QAAQC,MACjChC,KAAM,IAAIkC,KACVC,OAAQ,MAGVZ,GAAY,SAACa,GACX,MAAM,GAAN,mBAAWA,GAAX,CAAiBH,OAGnBzB,EAAO6B,KAAK,MAAOC,KAAKC,UAAUN,IAElCb,EAAgBW,QAAQC,MAAQ,GAEhCQ,SAASC,eAAe,WAAWC,UAAUC,IAAI,SAetBC,IAAvB,SACE,qBAAKC,IAAKC,EAASC,IAAI,OAAO1C,UAAU,kBAI5C,oBAAIA,UAAU,MAAd,SAAqBU,IAErB,cAACZ,EAAD,CAAaC,YAAakB,QCtEhC0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFV,SAASC,eAAe,W","file":"static/js/main.b4a40d50.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Command({ command }) {\r\n    console.log(`command`, command)\r\n    return (\r\n        < h1 > { command.command} / { command.date.getDate()}.{ command.date.getMonth() + 1}</h1 >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Command from './Command'\r\n\r\nexport default function CommandList({ commandlist }) {\r\n    return (\r\n        <ul className=\"cmdtable\">\r\n            {\r\n                commandlist.map(element => {\r\n\r\n                    return (\r\n                        <li>\r\n                            <Command command={element} />\r\n                        </li>\r\n\r\n                    )\r\n                })\r\n            }\r\n            <style>\r\n                {`\r\n.cmdtable{\r\n    margin-top: 150px;\r\n    margin-left: 40px;\r\n    list-style: none;\r\n}\r\n`}\r\n            </style>\r\n        </ul>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/PlayBtn.8ceabeab.svg\";","import React, { useState, useRef } from \"react\";\nimport CommandList from \"./CommandList\";\n\nimport \"./App.css\";\nimport PlayBtn from \"./Icons/PlayBtn.svg\";\n\nimport io from \"socket.io-client\";\nconst socket = io.connect(\"http://192.168.2.169:3001\", {\n  transports: [\"websocket\"],\n  upgrade: false,\n});\n\nfunction App() {\n  //Webscocket init\n  const [connected, setConnected] = useState(\"not Connected\");\n\n  socket.on(\"connect\", function () {\n    console.log(\"Connected to server\");\n    setConnected(\"Connected\");\n  });\n\n  socket.on(\"disconnect\", function () {\n    console.log(\"Disconnected\");\n    socket.removeAllListeners();\n    setConnected(\"Disconnected\");\n  });\n\n  socket.on(\"cmd\", function (cmd) {\n    console.log(cmd);\n  });\n\n  const commandInputRef = useRef();\n\n  const [commands, setCommands] = useState([]);\n\n  const onAddCommand = (e) => {\n    if (commandInputRef.current.value === \"\") return;\n\n    const obj = {\n      command: commandInputRef.current.value,\n      date: new Date(),\n      result: null,\n    };\n\n    setCommands((prev) => {\n      return [...prev, obj];\n    });\n\n    socket.emit(\"cmd\", JSON.stringify(obj));\n\n    commandInputRef.current.value = \"\";\n\n    document.getElementById(\"wrapper\").classList.add(\"move\");\n  };\n\n  return (\n    <>\n      <div className=\"wrapper\" id=\"wrapper\">\n        <input\n          autoComplete=\"off\"\n          placeholder=\"Enter Command...\"\n          id=\"input\"\n          className=\"input noselect\"\n          ref={commandInputRef}\n          type=\"text\"\n        />\n\n        <button onClick={() => onAddCommand()}>\n          <img src={PlayBtn} alt=\"Play\" className=\"noselect\" />\n        </button>\n      </div>\n\n      <h1 className=\"con\">{connected}</h1>\n\n      <CommandList commandlist={commands} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}