{"version":3,"sources":["Command.js","CommandList.js","Icons/PlayBtn.svg","App.js","index.js"],"names":["Command","command","console","log","date","getDate","getMonth","CommandList","commandlist","className","map","element","socket","io","connect","transports","upgrade","App","useState","connected","setConnected","on","removeAllListeners","out","setCommands","prev","Date","commandInputRef","useRef","commands","id","autoComplete","placeholder","ref","type","onClick","e","current","value","obj","emit","JSON","stringify","document","getElementById","classList","add","onAddCommand","src","PlayBtn","alt","ReactDOM","render","StrictMode"],"mappings":"6LAEe,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAE9B,OADAC,QAAQC,IAAR,UAAuBF,GAEnB,mCAASA,EAAQA,QAAjB,MAA8BA,EAAQG,KAAKC,UAA3C,IAAwDJ,EAAQG,KAAKE,WAAa,KCF3E,SAASC,EAAT,GAAuC,IAAhBC,EAAe,EAAfA,YAClC,OACI,qBAAIC,UAAU,WAAd,UAEQD,EAAYE,KAAI,SAAAC,GAEZ,OACI,6BACI,cAACX,EAAD,CAASC,QAASU,SAMlC,gI,UCjBG,MAA0B,oC,QCOnCC,E,OAASC,EAAGC,QAAQ,4BAA6B,CACrDC,WAAY,CAAC,aACbC,SAAS,IA+EIC,MA5Ef,WAEE,MAAkCC,mBAAS,iBAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEAR,EAAOS,GAAG,WAAW,WACnBnB,QAAQC,IAAI,uBACZiB,EAAa,gBAGfR,EAAOS,GAAG,cAAc,WACtBnB,QAAQC,IAAI,gBACZS,EAAOU,qBACPF,EAAa,mBAGfR,EAAOS,GAAG,UAAU,SAAUE,GAC5BrB,QAAQC,IAAI,OAASoB,GACrBC,GAAY,SAACC,GACX,MAAM,GAAN,mBAAWA,GAAX,CAAiB,CACfxB,QAASsB,EACTnB,KAAM,IAAIsB,cAShB,IAAMC,EAAkBC,mBAExB,EAAgCV,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBL,EAAjB,KAqBA,OACE,qCACE,sBAAKf,UAAU,UAAUqB,GAAG,UAA5B,UACE,uBACEC,aAAa,MACbC,YAAY,mBACZF,GAAG,QACHrB,UAAU,iBACVwB,IAAKN,EACLO,KAAK,SAGP,wBAAQC,QAAS,kBA/BF,SAACC,GACpB,GAAsC,KAAlCT,EAAgBU,QAAQC,MAA5B,CAEA,IAAMC,EAAM,CACVtC,QAAS0B,EAAgBU,QAAQC,MACjClC,KAAM,IAAIsB,MAGZF,GAAY,SAACC,GACX,MAAM,GAAN,mBAAWA,GAAX,CAAiBc,OAGnB3B,EAAO4B,KAAK,MAAOC,KAAKC,UAAUH,IAElCZ,EAAgBU,QAAQC,MAAQ,GAEhCK,SAASC,eAAe,WAAWC,UAAUC,IAAI,SAetBC,IAAvB,SACE,qBAAKC,IAAKC,EAASC,IAAI,OAAOzC,UAAU,kBAI5C,oBAAIA,UAAU,MAAd,SAAqBU,IAErB,cAACZ,EAAD,CAAaC,YAAaqB,QC/EhCsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFV,SAASC,eAAe,W","file":"static/js/main.7f6057f6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Command({ command }) {\r\n    console.log(`command`, command)\r\n    return (\r\n        < h1 > { command.command} / { command.date.getDate()}.{ command.date.getMonth() + 1}</h1 >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Command from './Command'\r\n\r\nexport default function CommandList({ commandlist }) {\r\n    return (\r\n        <ul className=\"cmdtable\">\r\n            {\r\n                commandlist.map(element => {\r\n\r\n                    return (\r\n                        <li>\r\n                            <Command command={element} />\r\n                        </li>\r\n\r\n                    )\r\n                })\r\n            }\r\n            <style>\r\n                {`\r\n.cmdtable{\r\n    margin-top: 150px;\r\n    margin-left: 40px;\r\n    list-style: none;\r\n}\r\n`}\r\n            </style>\r\n        </ul>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/PlayBtn.8ceabeab.svg\";","import React, { useState, useRef } from \"react\";\r\nimport CommandList from \"./CommandList\";\r\n\r\nimport \"./App.css\";\r\nimport PlayBtn from \"./Icons/PlayBtn.svg\";\r\n\r\nimport io from \"socket.io-client\";\r\nconst socket = io.connect(\"http://192.168.2.169:3001\", {\r\n  transports: [\"websocket\"],\r\n  upgrade: false,\r\n});\r\n\r\nfunction App() {\r\n  //Webscocket init\r\n  const [connected, setConnected] = useState(\"not Connected\");\r\n\r\n  socket.on(\"connect\", function () {\r\n    console.log(\"Connected to server\");\r\n    setConnected(\"Connected\");\r\n  });\r\n\r\n  socket.on(\"disconnect\", function () {\r\n    console.log(\"Disconnected\");\r\n    socket.removeAllListeners();\r\n    setConnected(\"Disconnected\");\r\n  });\r\n\r\n  socket.on(\"output\", function (out) {\r\n    console.log(\"Test\" + out);\r\n    setCommands((prev) => {\r\n      return [...prev, {\r\n        command: out,\r\n        date: new Date(),\r\n      }];\r\n    });\r\n\r\n  });\r\n\r\n\r\n\r\n\r\n  const commandInputRef = useRef();\r\n\r\n  const [commands, setCommands] = useState([]);\r\n\r\n  const onAddCommand = (e) => {\r\n    if (commandInputRef.current.value === \"\") return;\r\n\r\n    const obj = {\r\n      command: commandInputRef.current.value,\r\n      date: new Date(),\r\n    };\r\n\r\n    setCommands((prev) => {\r\n      return [...prev, obj];\r\n    });\r\n\r\n    socket.emit(\"cmd\", JSON.stringify(obj));\r\n\r\n    commandInputRef.current.value = \"\";\r\n\r\n    document.getElementById(\"wrapper\").classList.add(\"move\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\" id=\"wrapper\">\r\n        <input\r\n          autoComplete=\"off\"\r\n          placeholder=\"Enter Command...\"\r\n          id=\"input\"\r\n          className=\"input noselect\"\r\n          ref={commandInputRef}\r\n          type=\"text\"\r\n        />\r\n\r\n        <button onClick={() => onAddCommand()}>\r\n          <img src={PlayBtn} alt=\"Play\" className=\"noselect\" />\r\n        </button>\r\n      </div>\r\n\r\n      <h1 className=\"con\">{connected}</h1>\r\n\r\n      <CommandList commandlist={commands} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}